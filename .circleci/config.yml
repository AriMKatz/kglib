version: 2.1
commands:
  bazel_install:
    steps:
      - run:
          name: Bazel - Install
          command: |
            curl -OL https://github.com/bazelbuild/bazel/releases/download/0.20.0/bazel-0.20.0-installer-linux-x86_64.sh
            chmod +x bazel-0.20.0-installer-linux-x86_64.sh
            sudo ./bazel-0.20.0-installer-linux-x86_64.sh

jobs:
  test:
    machine: true
    working_directory: ~/kglib
    steps:
      - checkout
      - bazel_install
      - run: sudo apt-get update
      - run: pyenv install 3.6.3
      - run: pyenv global 3.6.3
#      - run: bazel test //... --test_output=streamed --force_python PY3 --python_path $(which python)

  build-and-deploy:
    machine: true
    working_directory: ~/kglib
    steps:
#      - run: bazel run //:deploy-pip -- test <username> <password>
      - run: echo build-and-deploy

  approve-deploy-git:
    machine: true
    working_directory: ~/kglib
    steps:
      - run: echo approve-deploy-git

  deploy-git:
    machine: true
    working_directory: ~/kglib
    steps:
      - run: echo deploy-git
      - run: wget https://github.com/tcnksm/ghr/releases/download/v0.12.0/ghr_v0.12.0_linux_386.tar.gz
      - run: tar xvf ghr_v0.12.0_linux_386.tar.gz
      - run: CIRCLE_TAG="v"$(cat "VERSION")
      - run:
         name: "Publish Draft Release on GitHub"
         command: |
           ghr_v0.12.0_linux_386/ghr -t ${GITHUB_DEPLOYMENT_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -delete -draft ${CIRCLE_TAG} ./artifacts

  approve-deploy-pip:
    machine: true
    working_directory: ~/kglib
    steps:
      - run: echo approve-deploy-pip

  deploy-pip:
    machine: true
    working_directory: ~/kglib
    steps:
      - run: echo deploy-pip

workflows:
  version: 2
  kglib:
    jobs:
      - test
      - build-and-deploy:
          requires:
            - test
      - approve-deploy-git:
          type: approval
          requires:
            - build-and-deploy
      - deploy-git:
          requires:
            - approve-deploy-git
      - approve-deploy-pip:
          type: approval
          requires:
            - deploy-git
      - deploy-pip:
          requires:
            - approve-deploy-pip